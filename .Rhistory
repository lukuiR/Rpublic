date=character())
for(v in 1:6){
thepage1 <- readLines(paste("budapeszt/",list[v], sep=""), encoding ="UTF-8")
mypattern = '### ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage1)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
if(length(datalines2)>1){
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)}
}
}
yd[,6]=sub(' ([^<]*)',"",yd[,1])
yd[,1]=sub('([^<]*) ?[{-}]',"",yd[,1])
yd[81:96,1]='UK'
yd[114:148,1]='USA'
for(v in 1:6){
thepage1 <- readLines(paste("budapeszt/",list[v], sep=""), encoding ="UTF-8")
mypattern = '### ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage1)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
if(length(datalines2)>1){
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)}
}
}
yd=data.frame(year=integer(),
pat=character(),
date=character())
for(v in 1:6){
thepage1 <- readLines(paste("budapeszt/",list[v], sep=""), encoding ="UTF-8")
mypattern = '### ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage1)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
if(length(datalines2)>1){
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)}
}
}
for(v in 1:6){
thepage1 <- readLines(paste("budapeszt/",list[v], sep=""), encoding ="UTF-8")
mypattern = '### ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage1)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
if(length(datalines2)>1){
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)}
}
}
yd=data.frame(year=integer(),
pat=character(),
date=character())
for(v in 1:6){
thepage1 <- readLines(paste("budapeszt/",list[v], sep=""), encoding ="UTF-8")
mypattern = '### ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage1)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
if(length(datalines2)>1){
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)}
}
}
yd[,6]=sub(' ([^<]*)',"",yd[,1])
yd[,1]=sub('([^<]*) ?[{-}]',"",yd[,1])
yd[81:96,1]='UK'
yd[114:177,1]='USA'
#meetup info
me=1
orgn='a'
desc='a'
for (i in 1:dim(yd)[1]){
thepage = try(readLines(yd$V4[i],encoding ="UTF-8"))
mypattern='<a href=([^<]*) class="groupHomeHeader-memberLink padding--left display--inlineBlock atLarge_padding--none"><p class="text--hint text--tiny"><span>([^<]*)</span></p><p class="text--bold"><span>([^<]*)</span>'
dataline = grep(mypattern,thepage,value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\3',matches)
names(result) = NULL
if(length(result)==0){
result=NA
}
me[i]=try(result)
mypattern='<a href="([^<]*)" class="orgInfo-name"><p class="text--hint text--tiny"><span>([^<]*)</span></p><span class="text--bold text--small">([^<]*)</span>'
dataline = grep(mypattern,thepage,value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\3',matches)
names(result) = NULL
if(length(result)==0){
result=NA
}
orgn[i]=try(result)
}
yd$members<-NULL
yd$orgnizer<-NULL
colnames(yd)<-c("kraj","all","miasto","web","nazwa","id")
yd=data.frame(yd,me,orgn)
colnames(yd)<-c("kraj","all","miasto","web","nazwa","id","members","organizer")
colnames(yd)<-c("kraj","all","miasto","web","nazwa","id1","members","organizer")
a=read.csv(file='budapeszt/states.csv',header = TRUE,sep = ";")
yd$id=sub('([^<]*), ',"",yd$miasto)
yd$city=sub(',([^<]*)',"",yd$miasto)
yd$id <- as.character(yd$id)
a$id <- as.character(a$id)
yd=merge(x=yd, y=a, by="id",all.x = TRUE)
yd$wiki=NA
for (i in 1:dim(yd)[1]){
thepage = try(readLines(paste('https://en.wikipedia.org/wiki/',yd$miasto[i],sep="")))
thepage=thepage[grep('og:image',thepage)[1]]
mypattern = '"https://([^<]*)"/>'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
if(length(result)==0){
thepage = try(readLines(paste('https://en.wikipedia.org/wiki/',yd$city[i],',_',yd$kraj[i],sep="")))
thepage=thepage[grep('og:image',thepage)[1]]
mypattern = '"https://([^<]*)"/>'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
if(length(result)==0){
thepage = try(readLines(paste('https://en.wikipedia.org/wiki/',yd$city[i],',_',yd$state[i],sep="")))
thepage=thepage[grep('og:image',thepage)[1]]
mypattern = '"https://([^<]*)"/>'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
}
}
yd$wiki[i]=paste('https://',result, sep="")
}
#Getting geolocation
library("jsonlite")
nominatim_osm <- function(address = NULL)
{
if(suppressWarnings(is.null(address)))
return(data.frame())
tryCatch(
d <- jsonlite::fromJSON(
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=0&limit=1')
), error = function(c) return(data.frame())
)
if(length(d) == 0) return(data.frame())
return(data.frame(lon = as.numeric(d$lon), lat = as.numeric(d$lat)))
}
#geo info
ad<-yd$city
ad<-paste(ad,',',yd$kraj)
z=data.frame()
for(i in 1:length(ad)){
x=nominatim_osm(ad[i])
if(length(x)>1){
z[i,1]=x[1]
z[i,2]=x[2]
}
}
yd=data.frame( yd,z)
##logo
kk='a'
for (i in 1:dim(yd)[1]){
print(i)
thepage = try(readLines(as.character( yd$web[i])))
thepage=thepage[grep('image',thepage)[1]]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
if(is.na(result)){
thepage = try(readLines(as.character( y$web[i])))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
mypattern = '"https:([^<]*)g\"'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'g', sep="")
}
}
}
yd$logo=kk
write.csv(yd,file="user.csv")
library(leaflet)
runApp('erum_jr')
runApp('erum_jr')
View(yd)
runApp('erum_jr')
runApp('erum_jr')
length(yd$logo[129])
yd$logo[129]
nchar(yd$logo[129])
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
View(yd)
yd[yd$members>100,]
yd[yd$members>>100,]
yd[yd$members==100,]
yd[yd$kraj %in% c("France"),]
yd[yd$kraj %in% c("France") | yd$miasto %in% c("Paris"),]
yd[yd$kraj %in% c("France") || yd$miasto %in% c("Paris"),]
yd[yd$kraj %in% c("France") && yd$miasto %in% c("Paris"),]
yd[yd$kraj %in% c("France") & yd$miasto %in% c("Paris"),]
yd[yd$miasto %in% c("Paris"),]
yd[yd$city %in% c("Paris"),]
yd[yd$city %in% c("Paris"),]
yd[yd$miasto %in% c("Paris"),]
yd[6,6]
yd[6,4]
yd[16,4]
yd[18,4]
yd[yd$miasto %in% c(" Paris"),]
yd[yd$miasto %in% c("  Paris"),]
yd[yd$kraj %in% c("France") & yd$miasto %in% c("  Paris"),]
yd[yd$kraj %in% c("France") | yd$miasto %in% c("  Paris"),]
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
cff123=read.csv("conf.csv", header = TRUE, sep=",",colClasses=c("NULL",NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA))
View(cff123)
cff123$id
cff123$id[1]
as.character(cff123$id[1])
str_replace_all(string=as.character(cff123$id[1]), pattern=" ", repl="")
as.character(cff123$id[1])
str_replace_all(as.character(cff123$id[1]), pattern=" ", repl="")
a=as.character(cff123$id[1])
str_replace_all(a, pattern=" ", repl="")
a
gsub("\\s", "", a)
a=cff123$id[1]
a
gsub("\\s", "", a)
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
View(z)
View(yd)
write.csv(yd,file="user.csv")
runApp('erum_jr')
View(yd)
runApp('erum_jr')
View(yd)
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
nchar(as.character(yd&all))
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
cff12=read.csv("user.csv", header = TRUE, sep=",",colClasses=c("NULL",NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA))
cff12
runApp('erum_jr')
