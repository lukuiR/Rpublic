dataline = grep(mypattern,thepage1[1:length(thepage)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result
matches
mypattern = '## ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
matches
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","year")
result[dim(result)[1]+1,1]=length(thepage1)
result
names(result)<-c("nr","country")
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\5',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\5',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)][;]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\5',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)][;]*([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\5',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)][;]?([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\5',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)][ ][;]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\5',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*[;]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
thepage1 <- readLines("budapeszt/02_useR_groups_asia.Rmd.txt",encoding ="UTF-8")
mypattern = '## ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
result
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
datalines2
grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
i
thepage1[result[i-1,1]:result[i,1]]
thepage1 <- readLines("budapeszt/02_useR_groups_asia.Rmd.txt",encoding ="UTF-8")
result
thepage1 <- readLines("budapeszt/02_useR_groups_asia.Rmd.txt",encoding ="UTF-8")
mypattern = '### ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage)],value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
result
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
View(yd)
jj <- readJPEG("https://duckduckgo.com/?q=wroclaw&atb=v98-7&iax=images&ia=images&iai=http%3A%2F%2Fgo.wroclaw.pl%2Fapi%2Fdownload%2Fimg-2095f89a0a18003d75e168ec81e72211%2Frynek-wroclaw-1180x700-jpg.jpg",native=TRUE)
img(src='https://duckduckgo.com/?q=wroclaw&atb=v98-7&iax=images&ia=images&iai=http%3A%2F%2Fgo.wroclaw.pl%2Fapi%2Fdownload%2Fimg-2095f89a0a18003d75e168ec81e72211%2Frynek-wroclaw-1180x700-jpg.jpg', width='40%' ,style="display: block; margin-left: auto; margin-right: auto;")
library(rgdal)
library(dygraphs)
img(src='https://duckduckgo.com/?q=wroclaw&atb=v98-7&iax=images&ia=images&iai=http%3A%2F%2Fgo.wroclaw.pl%2Fapi%2Fdownload%2Fimg-2095f89a0a18003d75e168ec81e72211%2Frynek-wroclaw-1180x700-jpg.jpg', width='40%' ,style="display: block; margin-left: auto; margin-right: auto;")
?iimg
?img
library(shiny)
library(shinydashboard)
img(src='https://duckduckgo.com/?q=wroclaw&atb=v98-7&iax=images&ia=images&iai=http%3A%2F%2Fgo.wroclaw.pl%2Fapi%2Fdownload%2Fimg-2095f89a0a18003d75e168ec81e72211%2Frynek-wroclaw-1180x700-jpg.jpg', width='40%' ,style="display: block; margin-left: auto; margin-right: auto;")
library(rvest)
install.packages("rvest")
library(rvest)
UrlPage <- html ("http://eyeonhousing.org/2012/11/gdp-growth-in-the-third-quarter-improved-but-still-slow/")
ImgNode <- UrlPage %>% html_node("img.wp-image-5984")
link <- html_attr(ImgNode, "src")
link
ImgNode
plot(0:1,0:1,type="n",ann=FALSE,axes=FALSE)
rasterImage(ImgNode,0,0,1,1)
rasterImage(link,0,0,1,1)
install.packages("gridExtra")
install.packages("EBImage")
install.packages("RGraphics")
library(gridExtra)
library(EBImage)
library(RGraphics)
x <- readImage("http://www.google.com/logos/teachersday09.gif")
g1 <- ebimageGrob(x)
dev.new(width=g1$width, height=g1$height)
grid.draw(g1)
library(EBImage)
install.packages("EBImage")
library(leaflet)
leaflet(data = quakes[1:20,]) %>% addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
greenLeafIcon <- makeIcon(
iconUrl = "http://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
leaflet(data = quakes[1:4,]) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = greenLeafIcon)
greenLeafIcon <- makeIcon(
iconUrl = link#"http://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
greenLeafIcon <- makeIcon(
iconUrl = link,#"http://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
leaflet(data = quakes[1:4,]) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = greenLeafIcon)
greenLeafIcon <- makeIcon(
iconUrl = link,#"http://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 90, iconHeight = 95,
iconAnchorX = 90, iconAnchorY = 94
)
leaflet(data = quakes[1:4,]) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = greenLeafIcon)
thepage = readLines('https://en.wikipedia.org/wiki/Wrocław')
thepage
mypattern = 'href-"([^<]*)"class="image"'
dataline = grep(mypattern,thepage1[1:length(thepage)],value=TRUE)
dataline[1]
mypattern = 'href="([^<]*)"class="image"'
dataline = grep(mypattern,thepage1[1:length(thepage)],value=TRUE)
dataline[1]
grep('image',thepage)
thepage[1]
thepage[18]
thepage[49]
View(yd)
