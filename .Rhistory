result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
}
}
kk
i=24
thepage = try(readLines(y$web[i]))
thepage
mypattern = 'https://([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
dataline[2]
grep('image',thepage)
thepage=thepage[grep('image',thepage)[1]]
thepage
thepage[grep('image',thepage)[2]]
grep('image',thepage)[2]
grep('image',thepage)
kk
y$web[i]
thepage = try(readLines(y$web[i]))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
dataline[2]
for (i in 1:dim(yd)[1]){
#thepage = readLines(paste('https://en.wikipedia.org/wiki/',yd[i,3],sep=""))
thepage = try(readLines(y$web[i]))
thepage=thepage[grep('image',thepage)[1]]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[2]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
if(is.na(result)){
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
mypattern = 'https:([^<]*)g'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'g', sep="")
}
}
}
kk
i=24
thepage = try(readLines(y$web[i]))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
dataline
mypattern = 'https:([^<]*)g'
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
result
mypattern = 'https:([^<]*)'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
result
for (i in 1:dim(yd)[1]){
#thepage = readLines(paste('https://en.wikipedia.org/wiki/',yd[i,3],sep=""))
thepage = try(readLines(y$web[i]))
thepage=thepage[grep('image',thepage)[1]]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[2]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
if(is.na(result)){
thepage = try(readLines(y$web[i]))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
mypattern = 'https:([^<]*)'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'g', sep="")
}
}
}
kk
y$web
for (i in 1:dim(yd)[1]){
#thepage = readLines(paste('https://en.wikipedia.org/wiki/',yd[i,3],sep=""))
thepage = try(readLines(y$web[i]))
thepage=thepage[grep('image',thepage)[1]]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[2]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
if(is.na(result)){
thepage = try(readLines(y$web[i]))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
mypattern = 'https:([^<]*)'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'g\', sep="")
}
}
}
i=24
mypattern = '"https:([^<]*)g\"'
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
result
for (i in 1:dim(yd)[1]){
#thepage = readLines(paste('https://en.wikipedia.org/wiki/',yd[i,3],sep=""))
thepage = try(readLines(y$web[i]))
thepage=thepage[grep('image',thepage)[1]]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[2]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
if(is.na(result)){
thepage = try(readLines(y$web[i]))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
mypattern = '"https:([^<]*)g\"'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'g', sep="")
}
}
}
kk
View(y)
y$logo=kk
leaflet(data = y) %>% addTiles() %>%
addMarkers(~lon, ~lat, popup=paste0(y$nazwa,"<br/><img src = ", y$logo, " Width = 150><br/> <SMALL>source: wikipedia</SMALL> "))
thepage=thepage[grep('member',thepage)[1]]
thepage
thepage = try(readLines(y$web[i]))
i
shiny::runApp('erum_jr')
thepage1 <- readLines("budapeszt/03-Rladies.Rmd.txt",encoding ="UTF-8")
mypattern = '## ([^<]*)'
dataline = grep(mypattern,thepage1[1:length(thepage1)],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result=data.frame(grep(mypattern,thepage1[1:length(thepage1)]), result)
names(result)<-c("nr","country")
result[dim(result)[1]+1,1]=length(thepage1)
yd=data.frame(year=integer(),
pat=character(),
date=character())
for (i in 2:dim(result)[1]){
mypattern = '* ([^<]*):'
datalines2 = grep(mypattern,thepage1[result[i-1,1]:result[i,1]],value=TRUE)
names(datalines2) = NULL
yd2=data.frame(result[i-1,2],datalines2)
for (j in 1:length(datalines2)) {
mypattern2 = "[*]([^<]*)*[:]([^<]*)*[[]([^<]*)*[]][(]([^<]*)*[)]([^<]*)*"
datalines = grep(mypattern2,datalines2[j],value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern2,datalines)
matche = mapply(getexpr,datalines,gg)
result1 = gsub(mypattern2,'\\1',matche)
if(length(result1)==0)
{
result1="NA"
}
result2 = gsub(mypattern2,'\\4',matche)
if(length(result2)==0)
{
result2="NA"
}
result3 = gsub(mypattern2,'\\3',matche)
if(length(result3)==0)
{
result3="NA"
}
result4 = gsub(mypattern2,'\\6',matche)
if(length(result4)==0)
{
result4="NA"
}
yd2[j,3]= result1
yd2[j,4]= result2
yd2[j,5]= result3
yd2[j,6]= result4
}
yd=rbind(yd,yd2)
}
yd[yd$V4=='https://www.meetup.com/R-Ladies-Brussels/members/',4]='https://www.meetup.com/R-Ladies-Brussels/'
me=1
orgn='a'
desc='a'
for (i in 1:dim(yd)[1]){
thepage = try(readLines(yd$V4[i],encoding ="UTF-8"))
mypattern='<a href=([^<]*) class="groupHomeHeader-memberLink padding--left display--inlineBlock atLarge_padding--none"><p class="text--hint text--tiny"><span>([^<]*)</span></p><p class="text--bold"><span>([^<]*)</span>'
dataline = grep(mypattern,thepage,value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\3',matches)
names(result) = NULL
if(length(result)==0){
result=NA
}
me[i]=try(result)
mypattern='<a href="([^<]*)" class="orgInfo-name"><p class="text--hint text--tiny"><span>([^<]*)</span></p><span class="text--bold text--small">([^<]*)</span>'
dataline = grep(mypattern,thepage,value=TRUE)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\3',matches)
names(result) = NULL
if(length(result)==0){
result=NA
}
orgn[i]=try(result)
}
yd$me<-NULL
yd$orgn<-NULL
colnames(yd)<-c("kraj","all","miasto","web","nazwa","twiter")
yd=data.frame(yd,me,orgn)
a=read.csv(file='budapeszt/states.csv',header = TRUE,sep = ";")
yd$id=sub('([^<]*), ',"",yd$miasto)
yd$city=sub(',([^<]*)',"",yd$miasto)
yd$id <- as.character(yd$id)
a$id <- as.character(a$id)
yd=merge(x=yd, y=a, by="id",all.x = TRUE)
yd$wiki=NA
for (i in 1:dim(yd)[1]){
thepage = try(readLines(paste('https://en.wikipedia.org/wiki/',yd$miasto[i],sep="")))
thepage=thepage[grep('og:image',thepage)[1]]
mypattern = '"https://([^<]*)"/>'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
if(length(result)==0){
thepage = try(readLines(paste('https://en.wikipedia.org/wiki/',yd$city[i],',_',yd$kraj[i],sep="")))
thepage=thepage[grep('og:image',thepage)[1]]
mypattern = '"https://([^<]*)"/>'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
if(length(result)==0){
thepage = try(readLines(paste('https://en.wikipedia.org/wiki/',yd$city[i],',_',yd$state[i],sep="")))
thepage=thepage[grep('og:image',thepage)[1]]
mypattern = '"https://([^<]*)"/>'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
}
}
yd$wiki[i]=paste('https://',result, sep="")
}
ad<-yd$city
ad<-paste(ad,',',yd$kraj)
library("jsonlite")
nominatim_osm <- function(address = NULL)
{
if(suppressWarnings(is.null(address)))
return(data.frame())
tryCatch(
d <- jsonlite::fromJSON(
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=0&limit=1')
), error = function(c) return(data.frame())
)
if(length(d) == 0) return(data.frame())
return(data.frame(lon = as.numeric(d$lon), lat = as.numeric(d$lat)))
}
z=data.frame()
for(i in 1:length(ad)){
z=rbind(z, nominatim_osm(ad[i]))
}
y=data.frame( yd,z)
kk='a'
for (i in 1:dim(yd)[1]){
#thepage = readLines(paste('https://en.wikipedia.org/wiki/',yd[i,3],sep=""))
thepage = try(readLines(y$web[i]))
thepage=thepage[grep('image',thepage)[1]]
mypattern = 'https:([^<]*)jpeg'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[2]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'jpeg', sep="")
if(is.na(result)){
mypattern = 'https:([^<]*)png'
dataline = grep(mypattern,thepage,value=TRUE)
dataline[1]
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'png', sep="")
if(is.na(result)){
thepage = try(readLines(y$web[i]))
mypattern = '([^<]*)profile_image([^<]*)'
dataline = grep(mypattern,thepage,value=TRUE)
mypattern = '"https:([^<]*)g\"'
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,dataline)
matches = mapply(getexpr,dataline,gg)
result = gsub(mypattern,'\\1',matches)[1]
names(result) = NULL
kk[i]=paste('https:',result,'g', sep="")
}
}
}
y$logo=kk
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
View(y)
runApp('erum_jr')
runApp('erum_jr')
y[y$lon== textOutput("zzz1"),15]
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
?renderImag
?renderImage
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
?uiOutput
?renderUI
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
y$wiki[y$lon<18]
y$wiki[y$lon=18]
y$wiki[y$lon==18]
y$wiki[y$lon<1518]
y$wiki[y$lon<15]
y$wiki[y$lon<1]
y$wiki[y$lon>1]
y$wiki[y$lon>13]
y$wiki[y$lon>131]
y$wiki[y$lon>15]
y$wiki[y$lon>150]
y$wiki[y$lon>140]
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
y$wiki[y$lon>140]
y$wiki[y$lng>140]
y$wiki[y$lng>14]
y$wiki[y$lng>1]
y$wiki[y$lat>1]
y$wiki[y$lat>140]
y$wiki[y$lat>50]
y$wiki[y$lng>140]
y$wiki[y$lon>140]
y$wiki[y$lat>50]
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
?condition
?conditionalPanel
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
?tags$iframe
?iframe
??iframe
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
View(y)
runApp('erum_jr')
runApp('erum_jr')
?tag
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
runApp('erum_jr')
